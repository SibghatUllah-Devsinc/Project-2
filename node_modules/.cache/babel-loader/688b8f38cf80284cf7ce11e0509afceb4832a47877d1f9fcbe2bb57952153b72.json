{"ast":null,"code":"var _jsxFileName = \"/home/sibghatullah/Web-Development/Devsinc-Projects/React Project/Project-2/src/components/Input/Input.js\";\nimport React from 'react';\nimport classes from '../Login/Login.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Input(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${classes.control} ${props.isValid === false ? classes.invalid : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id,\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: props.type,\n      id: props.id,\n      value: props.value,\n      onChange: props.onChange,\n      onBlur: props.onBlur\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 12\n  }, this);\n}\n\n_c = Input;\nexport default Input; // import React, { useState , useReducer, useEffect } from 'react';\n// import Input from '../Input/Input';\n// import Card from '../UI/Card/Card';\n// import classes from './Login.module.css';\n// const formFunction = (state,action) => {\n//   if (action.type === \"NAME_INPUT\" ){\n//     return {nameValue:action.val, nameIsValid:action.val.trim().length > 1};\n//   }\n//   if (action.type === \"NAME_BLUR\"){\n//     return {nameValue:state.nameValue, nameIsValid:state.nameValue.trim().length > 1};\n//   }\n//   if (action.type === \"EMAIL_INPUT\" ){\n//     return {emailValue:action.val, emailIsValid:action.val.includes(\"@\")};\n//   }\n//   if (action.type === \"EMAIL_BLUR\"){\n//     return {emailValue:state.emailValue, emailIsValid:state.emailValue.includes(\"@\")};\n//   }\n//   if( action.type ===\"PASSWORD_INPUT\" ){\n//     return {passwordValue:action.val, passwordIsValid:action.val.trim().length > 6};\n//   }\n//   if ( action.type ===\"Blur_Password\" ){\n//     return {passwordValue:state.passwordValue, passwordIsValid:state.passwordValue.trim().length > 6}\n//   }\n//   return {nameValue:\"\", nameIsValid:false,emailValue:\"\", emailIsValid:false, passwordValue:\"\", passwordIsValid:false}\n// }\n// const Login = (props) => {\n//   const [isLogin, setIsLogin] = useState(true);\n//   const [formIsValid, setFormIsValid] = useState(false);\n//   const [formState, dispatchForm] = useReducer(formFunction,{nameValue:\"\", nameIsValid:null, emailValue:\"\", emailIsValid:null, passwordValue:\"\", passwordIsValid:null})\n//   useEffect(()=>{\n//     const myTimeOut = setTimeout(() => {\n//       setFormIsValid(\n//         formState.emailIsValid && formState.passwordIsValid \n//       );\n//     },300)\n//     return ()=> {\n//       console.log(\"Clear TimeOut Called\");\n//       clearTimeout(myTimeOut)\n//     }\n//   },[formState.emailIsValid, formState.passwordIsValid])\n//   const nameChangeHandler = (event) => {\n//     dispatchForm({type:\"NAME_INPUT\", val:event.target.value});\n//   };\n//   const emailChangeHandler = (event) => {\n//     dispatchForm({type:\"EMAIL_INPUT\", val:event.target.value});\n//   };\n//   const passwordChangeHandler = (event) => {\n//     dispatchForm({type:\"PASSWORD_INPUT\", val:event.target.value})\n//   };\n//   const validateNameHandler = () => {\n//     dispatchForm({type:\"Name_BLUR\"});\n//   };\n//   const validateEmailHandler = () => {\n//     dispatchForm({type:\"EMAIL_BLUR\"});\n//   };\n//   const validatePasswordHandler = () => {\n//     dispatchForm({type:\"Blur_Password\"})\n//   };\n//   const submitHandler = (event) => {\n//     event.preventDefault();\n//     props.onLogin(formState.emailValue, formState.passwordValue);\n//   };\n//   const switchAuthModeHandler = () => {\n//     setIsLogin((prevState) => !prevState);\n//   };\n//   const registerUser = () => {\n//   }\n//   return (\n//     <Card className={classes.login}>\n//       <form onSubmit={submitHandler}>\n//         {!isLogin &&         <Input \n//           label = \"Name\"\n//           type = \"name\"\n//           id = \"name\"\n//           value = {formState.nameValue}\n//           onChange={nameChangeHandler}\n//           onBlur={validateNameHandler}\n//           isValid = {formState.nameIsValid}\n//         />}\n//         <Input \n//           label = \"Email\"\n//           type = \"email\"\n//           id = \"email\"\n//           value = {formState.emailValue}\n//           onChange={emailChangeHandler}\n//           onBlur={validateEmailHandler}\n//           isValid = {formState.emailIsValid}\n//         />\n//         <Input \n//           label = \"Password\"\n//           type = \"password\"\n//           id = \"password\"\n//           value = {formState.passwordValue}\n//           onChange={passwordChangeHandler}\n//           onBlur={validatePasswordHandler}\n//           isValid = {formState.passwordIsValid}\n//         />\n//         <div className={classes.actions}>\n//         <div className={classes.actions}>\n//          {isLogin ?  <button disabled={!formIsValid}>Login</button> :  <button onClick={registerUser} disabled={!formIsValid}>Create Account</button>}\n//           <button\n//             type='button'\n//             className={classes.toggle}\n//             onClick={switchAuthModeHandler}\n//           >\n//             {isLogin ? 'Create new account' : 'Login with existing account'}\n//           </button>\n//         </div>\n//         </div>\n//       </form>\n//     </Card>\n//   );\n// };\n// export default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","classes","Input","props","control","isValid","invalid","id","label","type","value","onChange","onBlur"],"sources":["/home/sibghatullah/Web-Development/Devsinc-Projects/React Project/Project-2/src/components/Input/Input.js"],"sourcesContent":["import React from 'react'\r\nimport classes from '../Login/Login.module.css'\r\n\r\nfunction Input(props){\r\n    return <div\r\n    className={`${classes.control} ${\r\n      props.isValid === false ? classes.invalid : ''\r\n    }`}\r\n  >\r\n    <label htmlFor={props.id}>{props.label}</label>\r\n    <input\r\n      type={props.type}\r\n      id={props.id}\r\n      value={props.value}\r\n      onChange={props.onChange}\r\n      onBlur={props.onBlur}\r\n    />\r\n  </div>\r\n}\r\n\r\nexport default Input\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState , useReducer, useEffect } from 'react';\r\n// import Input from '../Input/Input';\r\n// import Card from '../UI/Card/Card';\r\n// import classes from './Login.module.css';\r\n\r\n\r\n\r\n\r\n// const formFunction = (state,action) => {\r\n//   if (action.type === \"NAME_INPUT\" ){\r\n//     return {nameValue:action.val, nameIsValid:action.val.trim().length > 1};\r\n//   }\r\n//   if (action.type === \"NAME_BLUR\"){\r\n//     return {nameValue:state.nameValue, nameIsValid:state.nameValue.trim().length > 1};\r\n//   }\r\n//   if (action.type === \"EMAIL_INPUT\" ){\r\n//     return {emailValue:action.val, emailIsValid:action.val.includes(\"@\")};\r\n//   }\r\n//   if (action.type === \"EMAIL_BLUR\"){\r\n//     return {emailValue:state.emailValue, emailIsValid:state.emailValue.includes(\"@\")};\r\n//   }\r\n//   if( action.type ===\"PASSWORD_INPUT\" ){\r\n//     return {passwordValue:action.val, passwordIsValid:action.val.trim().length > 6};\r\n//   }\r\n//   if ( action.type ===\"Blur_Password\" ){\r\n//     return {passwordValue:state.passwordValue, passwordIsValid:state.passwordValue.trim().length > 6}\r\n//   }\r\n//   return {nameValue:\"\", nameIsValid:false,emailValue:\"\", emailIsValid:false, passwordValue:\"\", passwordIsValid:false}\r\n// }\r\n\r\n\r\n\r\n// const Login = (props) => {\r\n//   const [isLogin, setIsLogin] = useState(true);\r\n//   const [formIsValid, setFormIsValid] = useState(false);\r\n  \r\n\r\n//   const [formState, dispatchForm] = useReducer(formFunction,{nameValue:\"\", nameIsValid:null, emailValue:\"\", emailIsValid:null, passwordValue:\"\", passwordIsValid:null})\r\n\r\n\r\n//   useEffect(()=>{\r\n//     const myTimeOut = setTimeout(() => {\r\n\r\n//       setFormIsValid(\r\n//         formState.emailIsValid && formState.passwordIsValid \r\n//       );\r\n//     },300)\r\n//     return ()=> {\r\n//       console.log(\"Clear TimeOut Called\");\r\n//       clearTimeout(myTimeOut)\r\n//     }\r\n\r\n//   },[formState.emailIsValid, formState.passwordIsValid])\r\n  \r\n//   const nameChangeHandler = (event) => {\r\n//     dispatchForm({type:\"NAME_INPUT\", val:event.target.value});\r\n//   };\r\n//   const emailChangeHandler = (event) => {\r\n//     dispatchForm({type:\"EMAIL_INPUT\", val:event.target.value});\r\n//   };\r\n\r\n//   const passwordChangeHandler = (event) => {\r\n//     dispatchForm({type:\"PASSWORD_INPUT\", val:event.target.value})\r\n//   };\r\n//   const validateNameHandler = () => {\r\n//     dispatchForm({type:\"Name_BLUR\"});\r\n//   };\r\n\r\n//   const validateEmailHandler = () => {\r\n//     dispatchForm({type:\"EMAIL_BLUR\"});\r\n//   };\r\n\r\n//   const validatePasswordHandler = () => {\r\n//     dispatchForm({type:\"Blur_Password\"})\r\n\r\n//   };\r\n\r\n//   const submitHandler = (event) => {\r\n//     event.preventDefault();\r\n//     props.onLogin(formState.emailValue, formState.passwordValue);\r\n//   };\r\n//   const switchAuthModeHandler = () => {\r\n//     setIsLogin((prevState) => !prevState);\r\n//   };\r\n\r\n//   const registerUser = () => {\r\n    \r\n//   }\r\n//   return (\r\n//     <Card className={classes.login}>\r\n//       <form onSubmit={submitHandler}>\r\n//         {!isLogin &&         <Input \r\n//           label = \"Name\"\r\n//           type = \"name\"\r\n//           id = \"name\"\r\n//           value = {formState.nameValue}\r\n//           onChange={nameChangeHandler}\r\n//           onBlur={validateNameHandler}\r\n//           isValid = {formState.nameIsValid}\r\n//         />}\r\n//         <Input \r\n//           label = \"Email\"\r\n//           type = \"email\"\r\n//           id = \"email\"\r\n//           value = {formState.emailValue}\r\n//           onChange={emailChangeHandler}\r\n//           onBlur={validateEmailHandler}\r\n//           isValid = {formState.emailIsValid}\r\n//         />\r\n//         <Input \r\n//           label = \"Password\"\r\n//           type = \"password\"\r\n//           id = \"password\"\r\n//           value = {formState.passwordValue}\r\n//           onChange={passwordChangeHandler}\r\n//           onBlur={validatePasswordHandler}\r\n//           isValid = {formState.passwordIsValid}\r\n//         />\r\n//         <div className={classes.actions}>\r\n//         <div className={classes.actions}>\r\n//          {isLogin ?  <button disabled={!formIsValid}>Login</button> :  <button onClick={registerUser} disabled={!formIsValid}>Create Account</button>}\r\n//           <button\r\n//             type='button'\r\n//             className={classes.toggle}\r\n//             onClick={switchAuthModeHandler}\r\n//           >\r\n//             {isLogin ? 'Create new account' : 'Login with existing account'}\r\n//           </button>\r\n//         </div>\r\n//         </div>\r\n//       </form>\r\n//     </Card>\r\n//   );\r\n// };\r\n\r\n// export default Login;\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,2BAApB;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAqB;EACjB,oBAAO;IACP,SAAS,EAAG,GAAEF,OAAO,CAACG,OAAQ,IAC5BD,KAAK,CAACE,OAAN,KAAkB,KAAlB,GAA0BJ,OAAO,CAACK,OAAlC,GAA4C,EAC7C,EAHM;IAAA,wBAKP;MAAO,OAAO,EAAEH,KAAK,CAACI,EAAtB;MAAA,UAA2BJ,KAAK,CAACK;IAAjC;MAAA;MAAA;MAAA;IAAA,QALO,eAMP;MACE,IAAI,EAAEL,KAAK,CAACM,IADd;MAEE,EAAE,EAAEN,KAAK,CAACI,EAFZ;MAGE,KAAK,EAAEJ,KAAK,CAACO,KAHf;MAIE,QAAQ,EAAEP,KAAK,CAACQ,QAJlB;MAKE,MAAM,EAAER,KAAK,CAACS;IALhB;MAAA;MAAA;MAAA;IAAA,QANO;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AAcH;;KAfQV,K;AAiBT,eAAeA,KAAf,C,CAMA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAGA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}